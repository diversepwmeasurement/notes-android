concurrency:
  cancel-in-progress: true
  group: analysis-wrapper-${{ github.head_ref || github.run_id }}
jobs:
  analysis:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: get-vars
      name: Setup variables
      run: "if [ -z \"$GITHUB_HEAD_REF\" ]; then\n    # push\n    {\n        echo\
        \ \"branch=$GITHUB_REF_NAME\"\n        echo \"pr=$GITHUB_RUN_ID\"\n      \
        \  echo \"repo=${{ github.repository }}\"\n    } >> \"$GITHUB_OUTPUT\"\nelse\n\
        \    # pull request\n    {\n        echo \"branch=$GITHUB_HEAD_REF\"\n   \
        \     echo \"pr=${{ github.event.pull_request.number }}\"\n        echo \"\
        repo=${{ github.event.pull_request.head.repo.full_name }}\"\n    } >> \"$GITHUB_OUTPUT\"\
        \nfi\n"
    - continue-on-error: true
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      with:
        ref: ${{ steps.get-vars.outputs.branch }}
        repository: ${{ steps.get-vars.outputs.repo }}
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      name: Install dependencies
      run: 'python3 -m pip install defusedxml

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Run analysis wrapper
      run: 'mkdir -p "$HOME/.gradle"

        echo "org.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError"
        > "$HOME/.gradle/gradle.properties"

        scripts/analysis/analysis-wrapper.sh ${{ steps.get-vars.outputs.branch }}
        ${{ secrets.LOG_USERNAME }} ${{ secrets.LOG_PASSWORD }} "$GITHUB_RUN_NUMBER"
        ${{ steps.get-vars.outputs.pr }}

        '
name: Analysis
on:
  repository_dispatch:
    types: trigger-ga___analysis.yml
permissions:
  contents: write
  pull-requests: write
